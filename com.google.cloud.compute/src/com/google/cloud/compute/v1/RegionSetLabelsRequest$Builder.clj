(ns com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder
  (:refer-clojure :only [require comment defn ->])
  (:import [com.google.cloud.compute.v1 RegionSetLabelsRequest$Builder]))

(defn merge-from
  "other - `com.google.cloud.compute.v1.RegionSetLabelsRequest`

  returns: `com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder`"
  (^com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder [^RegionSetLabelsRequest$Builder this ^com.google.cloud.compute.v1.RegionSetLabelsRequest other]
    (-> this (.mergeFrom other))))

(defn get-label-fingerprint
  "The fingerprint of the previous set of labels for this resource, used to detect conflicts.
   The fingerprint is initially generated by Compute Engine and changes after every request to
   modify or update labels. You must always provide an up-to-date fingerprint hash in order to
   update or change labels. Make a get() request to the resource to get the latest fingerprint.

  returns: `java.lang.String`"
  (^java.lang.String [^RegionSetLabelsRequest$Builder this]
    (-> this (.getLabelFingerprint))))

(defn set-label-fingerprint
  "The fingerprint of the previous set of labels for this resource, used to detect conflicts.
   The fingerprint is initially generated by Compute Engine and changes after every request to
   modify or update labels. You must always provide an up-to-date fingerprint hash in order to
   update or change labels. Make a get() request to the resource to get the latest fingerprint.

  label-fingerprint - `java.lang.String`

  returns: `com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder`"
  (^com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder [^RegionSetLabelsRequest$Builder this ^java.lang.String label-fingerprint]
    (-> this (.setLabelFingerprint label-fingerprint))))

(defn get-labels-map
  "The labels to set for this resource.

  returns: `java.util.Map<java.lang.String,java.lang.String>`"
  (^java.util.Map [^RegionSetLabelsRequest$Builder this]
    (-> this (.getLabelsMap))))

(defn put-all-labels
  "The labels to set for this resource.

  labels - `java.util.Map`

  returns: `com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder`"
  (^com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder [^RegionSetLabelsRequest$Builder this ^java.util.Map labels]
    (-> this (.putAllLabels labels))))

(defn build
  "returns: `com.google.cloud.compute.v1.RegionSetLabelsRequest`"
  (^com.google.cloud.compute.v1.RegionSetLabelsRequest [^RegionSetLabelsRequest$Builder this]
    (-> this (.build))))

(defn clone
  "returns: `com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder`"
  (^com.google.cloud.compute.v1.RegionSetLabelsRequest$Builder [^RegionSetLabelsRequest$Builder this]
    (-> this (.clone))))

